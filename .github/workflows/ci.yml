name: DevSecOps CI Python

on:
  workflow_dispatch:
    inputs:
      python_version:
        description: 'Python version to use'
        required: true
        default: '3.12'
        type: string
      runner:
        description: 'Runner to use'
        required: false
        default: 'ubuntu-latest'
        type: string
      exclude_dirs:
        description: 'Directories to exclude from Ruff check'
        required: false
        default: 'datasets'
        type: string
      uv_version:
        description: 'UV version to use'
        required: false
        default: 'latest'
        type: string
  push:
    branches:
      - develop
      - feat/**
      - fix/**
  pull_request:
    branches:
      - main

env:
  DEFAULT_PYTHON_VERSION: '3.12'
  DEFAULT_EXCLUDE_DIRS: 'datasets'
  UV_CACHE_DIR: ~/.cache/uv

jobs:
  ruff:
    name: ðŸ§¹ Ruff Linting & Formatting
    runs-on: ${{ github.event.inputs.runner || 'ubuntu-latest' }}
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
          version: ${{ github.event.inputs.uv_version || 'latest' }}
      - name: Set up Python
        run: uv python install ${{ github.event.inputs.python_version || env.DEFAULT_PYTHON_VERSION }}
      - name: Install dependencies
        run: uv sync --all-extras --dev
      - name: Ruff Check
        run: uvx ruff check --exclude "${{ github.event.inputs.exclude_dirs || env.DEFAULT_EXCLUDE_DIRS }}" --output-format github .
      - name: Ruff Format Check
        run: uvx ruff format --check .

  semgrep:
    name: ðŸ”’ Semgrep Security Scan
    runs-on: ${{ github.event.inputs.runner || 'ubuntu-latest' }}
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
          version: ${{ github.event.inputs.uv_version || 'latest' }}
      - name: Set up Python
        run: uv python install ${{ github.event.inputs.python_version || env.DEFAULT_PYTHON_VERSION }}
      - name: Install Semgrep
        run: uv tool install semgrep
      - name: Run Semgrep Scan
        run: semgrep scan --config=auto --severity=ERROR